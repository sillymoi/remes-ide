<?xml version="1.0" encoding="UTF-8"?>
<gmfgen:GenEditorGenerator xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:gmfgen="http://www.eclipse.org/gmf/2009/GenModel" packageNamePrefix="se.mdh.progresside.remes.diagram">
  <diagram
      visualID="1000"
      editPartClassName="RemesDiagramEditPart"
      itemSemanticEditPolicyClassName="RemesDiagramItemSemanticEditPolicy"
      canonicalEditPolicyClassName="RemesDiagramCanonicalEditPolicy"
      iconProviderPriority="Low"
      validationProviderPriority="Low">
    <diagramRunTimeClass
        href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Diagram"/>
    <elementType
        xsi:type="gmfgen:MetamodelType"
        editHelperClassName="RemesDiagramEditHelper"/>
    <viewmap
        xsi:type="gmfgen:FigureViewmap"
        figureQualifiedClassName="org.eclipse.draw2d.FreeformLayer"/>
    <domainDiagramElement
        href="remes.genmodel#//remes/RemesDiagram"/>
    <childNodes
        xsi:type="gmfgen:GenChildLabelNode"
        visualID="3015"
        editPartClassName="VariableEditPart"
        itemSemanticEditPolicyClassName="VariableItemSemanticEditPolicy"
        canonicalEditPolicyClassName="VariableCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="VariableGraphicalNodeEditPolicy"
        createCommandClassName="VariableCreateCommand"
        containers="//@diagram/@compartments.0"
        labelElementIcon="true">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="VariableEditHelper"/>
      <viewmap
          xsi:type="gmfgen:FigureViewmap"
          figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
      <modelFacet>
        <metaClass
            href="remes.genmodel#//remes/Variable"/>
        <containmentMetaFeature
            href="remes.genmodel#//remes/Mode/variables"/>
        <childMetaFeature
            href="remes.genmodel#//remes/Mode/variables"/>
      </modelFacet>
      <labelModelFacet
          xsi:type="gmfgen:FeatureLabelModelFacet"
          parser="//@labelParsers/@implementations.0"
          viewPattern="{0}{1,choice,0#|0&lt;[{1}]}:{2}"
          editorPattern="{0}:{1}"
          editPattern="{0}:{1}">
        <metaFeatures
            href="remes.genmodel#//remes/Variable/name"/>
        <metaFeatures
            href="remes.genmodel#//remes/Variable/vectorSize"/>
        <metaFeatures
            href="remes.genmodel#//remes/Variable/type"/>
        <metaFeatures
            href="remes.genmodel#//remes/Variable/global"/>
        <editableMetaFeatures
            href="remes.genmodel#//remes/Variable/name"/>
        <editableMetaFeatures
            href="remes.genmodel#//remes/Variable/type"/>
      </labelModelFacet>
    </childNodes>
    <childNodes
        xsi:type="gmfgen:GenChildLabelNode"
        visualID="3016"
        editPartClassName="ResourceEditPart"
        itemSemanticEditPolicyClassName="ResourceItemSemanticEditPolicy"
        canonicalEditPolicyClassName="ResourceCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="ResourceGraphicalNodeEditPolicy"
        createCommandClassName="ResourceCreateCommand"
        containers="//@diagram/@compartments.1"
        labelElementIcon="true">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ResourceEditHelper"/>
      <viewmap
          xsi:type="gmfgen:FigureViewmap"
          figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
      <modelFacet>
        <metaClass
            href="remes.genmodel#//remes/Resource"/>
        <containmentMetaFeature
            href="remes.genmodel#//remes/SubMode/resources"/>
        <childMetaFeature
            href="remes.genmodel#//remes/SubMode/resources"/>
      </modelFacet>
      <labelModelFacet
          xsi:type="gmfgen:FeatureLabelModelFacet"
          parser="//@labelParsers/@implementations.0"
          viewPattern="{0}"
          editorPattern="{0}:{1}"
          editPattern="{0}:{1}">
        <metaFeatures
            href="remes.genmodel#//remes/Resource/expression"/>
        <metaFeatures
            href="remes.genmodel#//remes/Resource/type"/>
        <editableMetaFeatures
            href="remes.genmodel#//remes/Resource/expression"/>
        <editableMetaFeatures
            href="remes.genmodel#//remes/Resource/type"/>
      </labelModelFacet>
    </childNodes>
    <childNodes
        visualID="3017"
        editPartClassName="SubMode2EditPart"
        itemSemanticEditPolicyClassName="SubMode2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="SubMode2CanonicalEditPolicy"
        compartments="//@diagram/@compartments.4 //@diagram/@compartments.5"
        graphicalNodeEditPolicyClassName="SubMode2GraphicalNodeEditPolicy"
        createCommandClassName="SubMode2CreateCommand"
        containers="//@diagram/@compartments.3">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@topLevelNodes.0/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="SubModeFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class SubModeFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeInitializationFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeInvariantFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeIsUrgentFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureVariablesFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureResourcesFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public SubModeFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;));&#xA;this.setLineWidth(1);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureSubModeNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeNameFigure.setText(&quot;Submode Name&quot;);&#xA;&#xA;this.add(fFigureSubModeNameFigure);&#xA;&#xA;&#xA;&#xA;fFigureSubModeInitializationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeInitializationFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureSubModeInitializationFigure);&#xA;&#xA;&#xA;&#xA;fFigureSubModeInvariantFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeInvariantFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureSubModeInvariantFigure);&#xA;&#xA;&#xA;&#xA;fFigureSubModeIsUrgentFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeIsUrgentFigure.setText(&quot;false&quot;);&#xA;&#xA;this.add(fFigureSubModeIsUrgentFigure);&#xA;&#xA;/*FIXME referenced figures are just not yet fully-functional; need process attrs and layout here*/&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure variablesFigure0 = new org.eclipse.draw2d.RectangleFigure();&#xA;variablesFigure0.setLineWidth(1);&#xA;&#xA;this.add(variablesFigure0);&#xA;variablesFigure0.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#xA;/*FIXME referenced figures are just not yet fully-functional; need process attrs and layout here*/&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure resourcesFigure0 = new org.eclipse.draw2d.RectangleFigure();&#xA;resourcesFigure0.setLineWidth(1);&#xA;&#xA;this.add(resourcesFigure0);&#xA;resourcesFigure0.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeNameFigure() {&#xA;&#x9;&#x9;return fFigureSubModeNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeInitializationFigure() {&#xA;&#x9;&#x9;return fFigureSubModeInitializationFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeInvariantFigure() {&#xA;&#x9;&#x9;return fFigureSubModeInvariantFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeIsUrgentFigure() {&#xA;&#x9;&#x9;return fFigureSubModeIsUrgentFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureVariablesFigure() {&#xA;&#x9;&#x9;return fFigureVariablesFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureResourcesFigure() {&#xA;&#x9;&#x9;return fFigureResourcesFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
      <modelFacet>
        <metaClass
            href="remes.genmodel#//remes/SubMode"/>
        <containmentMetaFeature
            href="remes.genmodel#//remes/CompositeMode/subModes"/>
        <childMetaFeature
            href="remes.genmodel#//remes/CompositeMode/subModes"/>
      </modelFacet>
      <labels
          visualID="5033"
          editPartClassName="SubModeName2EditPart"
          itemSemanticEditPolicyClassName="SubModeName2ItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureSubModeNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0"
            editPattern="">
          <metaFeatures
              href="remes.genmodel#//remes/Mode/name"/>
          <editableMetaFeatures
              href="remes.genmodel#//remes/Mode/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5034"
          editPartClassName="SubModeInitialization2EditPart"
          itemSemanticEditPolicyClassName="SubModeInitialization2ItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureSubModeInitializationFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="remes.genmodel#//remes/Mode/initialization"/>
          <editableMetaFeatures
              href="remes.genmodel#//remes/Mode/initialization"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5035"
          editPartClassName="SubModeInvariant2EditPart"
          itemSemanticEditPolicyClassName="SubModeInvariant2ItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureSubModeInvariantFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="remes.genmodel#//remes/SubMode/invariant"/>
          <editableMetaFeatures
              href="remes.genmodel#//remes/SubMode/invariant"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5036"
          editPartClassName="SubModeIsUrgent2EditPart"
          itemSemanticEditPolicyClassName="SubModeIsUrgent2ItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureSubModeIsUrgentFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="remes.genmodel#//remes/SubMode/isUrgent"/>
          <editableMetaFeatures
              href="remes.genmodel#//remes/SubMode/isUrgent"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        xsi:type="gmfgen:GenChildLabelNode"
        visualID="3018"
        editPartClassName="Variable2EditPart"
        itemSemanticEditPolicyClassName="Variable2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Variable2CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Variable2GraphicalNodeEditPolicy"
        createCommandClassName="Variable2CreateCommand"
        containers="//@diagram/@compartments.4"
        labelElementIcon="true">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.0/@elementType"/>
      <viewmap
          xsi:type="gmfgen:FigureViewmap"
          figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
      <modelFacet>
        <metaClass
            href="remes.genmodel#//remes/Variable"/>
        <containmentMetaFeature
            href="remes.genmodel#//remes/Mode/variables"/>
        <childMetaFeature
            href="remes.genmodel#//remes/Mode/variables"/>
      </modelFacet>
      <labelModelFacet
          xsi:type="gmfgen:FeatureLabelModelFacet"
          parser="//@labelParsers/@implementations.0"
          viewPattern="{0}{1,choice,0#|0&lt;[{1}]}:{2}"
          editorPattern="{0}:{1}"
          editPattern="{0}:{1}">
        <metaFeatures
            href="remes.genmodel#//remes/Variable/name"/>
        <metaFeatures
            href="remes.genmodel#//remes/Variable/vectorSize"/>
        <metaFeatures
            href="remes.genmodel#//remes/Variable/type"/>
        <metaFeatures
            href="remes.genmodel#//remes/Variable/global"/>
        <editableMetaFeatures
            href="remes.genmodel#//remes/Variable/name"/>
        <editableMetaFeatures
            href="remes.genmodel#//remes/Variable/type"/>
        <editableMetaFeatures
            href="remes.genmodel#//remes/Variable/global"/>
      </labelModelFacet>
    </childNodes>
    <childNodes
        xsi:type="gmfgen:GenChildLabelNode"
        visualID="3019"
        editPartClassName="Resource2EditPart"
        itemSemanticEditPolicyClassName="Resource2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Resource2CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Resource2GraphicalNodeEditPolicy"
        createCommandClassName="Resource2CreateCommand"
        containers="//@diagram/@compartments.5"
        labelElementIcon="true">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.1/@elementType"/>
      <viewmap
          xsi:type="gmfgen:FigureViewmap"
          figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
      <modelFacet>
        <metaClass
            href="remes.genmodel#//remes/Resource"/>
        <containmentMetaFeature
            href="remes.genmodel#//remes/SubMode/resources"/>
        <childMetaFeature
            href="remes.genmodel#//remes/SubMode/resources"/>
      </modelFacet>
      <labelModelFacet
          xsi:type="gmfgen:FeatureLabelModelFacet"
          parser="//@labelParsers/@implementations.0"
          viewPattern="{0}"
          editorPattern="{0}:{1}"
          editPattern="{0}:{1}">
        <metaFeatures
            href="remes.genmodel#//remes/Resource/expression"/>
        <metaFeatures
            href="remes.genmodel#//remes/Resource/type"/>
        <editableMetaFeatures
            href="remes.genmodel#//remes/Resource/expression"/>
        <editableMetaFeatures
            href="remes.genmodel#//remes/Resource/type"/>
      </labelModelFacet>
    </childNodes>
    <childNodes
        visualID="3020"
        editPartClassName="ConditionalConnectorEditPart"
        itemSemanticEditPolicyClassName="ConditionalConnectorItemSemanticEditPolicy"
        canonicalEditPolicyClassName="ConditionalConnectorCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="ConditionalConnectorGraphicalNodeEditPolicy"
        createCommandClassName="ConditionalConnectorCreateCommand"
        containers="//@diagram/@compartments.3">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ConditionalConnectorEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ConditionalConnectorFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ConditionalConnectorFigure extends org.eclipse.draw2d.Ellipse {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureConditionalConnectorNameFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ConditionalConnectorFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setLineWidth(1);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureConditionalConnectorNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureConditionalConnectorNameFigure.setText(&quot;&quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureConditionalConnectorNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureConditionalConnectorNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConditionalConnectorNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureConditionalConnectorNameFigure.horizontalIndent = 0;&#xA;constraintFFigureConditionalConnectorNameFigure.horizontalSpan = 1;&#xA;constraintFFigureConditionalConnectorNameFigure.verticalSpan = 1;&#xA;constraintFFigureConditionalConnectorNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureConditionalConnectorNameFigure.grabExcessVerticalSpace = true;&#xA;this.add(fFigureConditionalConnectorNameFigure, constraintFFigureConditionalConnectorNameFigure);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureConditionalConnectorNameFigure() {&#xA;&#x9;&#x9;return fFigureConditionalConnectorNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
      <modelFacet>
        <metaClass
            href="remes.genmodel#//remes/ConditionalConnector"/>
        <containmentMetaFeature
            href="remes.genmodel#//remes/CompositeMode/conditionalConnectors"/>
        <childMetaFeature
            href="remes.genmodel#//remes/CompositeMode/conditionalConnectors"/>
      </modelFacet>
      <labels
          visualID="5037"
          editPartClassName="ConditionalConnectorNameEditPart"
          itemSemanticEditPolicyClassName="ConditionalConnectorNameItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureConditionalConnectorNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="remes.genmodel#//remes/ConditionalConnector/name"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        xsi:type="gmfgen:GenChildLabelNode"
        visualID="3021"
        editPartClassName="Variable3EditPart"
        itemSemanticEditPolicyClassName="Variable3ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Variable3CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Variable3GraphicalNodeEditPolicy"
        createCommandClassName="Variable3CreateCommand"
        containers="//@diagram/@compartments.2"
        labelElementIcon="true">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.0/@elementType"/>
      <viewmap
          xsi:type="gmfgen:FigureViewmap"
          figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
      <modelFacet>
        <metaClass
            href="remes.genmodel#//remes/Variable"/>
        <containmentMetaFeature
            href="remes.genmodel#//remes/Mode/variables"/>
        <childMetaFeature
            href="remes.genmodel#//remes/Mode/variables"/>
      </modelFacet>
      <labelModelFacet
          xsi:type="gmfgen:FeatureLabelModelFacet"
          parser="//@labelParsers/@implementations.0"
          viewPattern="{0}{1,choice,0#|0&lt;[{1}]}:{2}"
          editorPattern="{0}:{1}"
          editPattern="{0}:{1}">
        <metaFeatures
            href="remes.genmodel#//remes/Variable/name"/>
        <metaFeatures
            href="remes.genmodel#//remes/Variable/vectorSize"/>
        <metaFeatures
            href="remes.genmodel#//remes/Variable/type"/>
        <metaFeatures
            href="remes.genmodel#//remes/Variable/global"/>
        <editableMetaFeatures
            href="remes.genmodel#//remes/Variable/name"/>
        <editableMetaFeatures
            href="remes.genmodel#//remes/Variable/type"/>
      </labelModelFacet>
    </childNodes>
    <topLevelNodes
        visualID="2005"
        editPartClassName="SubModeEditPart"
        itemSemanticEditPolicyClassName="SubModeItemSemanticEditPolicy"
        canonicalEditPolicyClassName="SubModeCanonicalEditPolicy"
        compartments="//@diagram/@compartments.0 //@diagram/@compartments.1"
        graphicalNodeEditPolicyClassName="SubModeGraphicalNodeEditPolicy"
        createCommandClassName="SubModeCreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="SubModeEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="SubModeFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class SubModeFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeInitializationFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeInvariantFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeIsUrgentFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureVariablesFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureResourcesFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public SubModeFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;));&#xA;this.setLineWidth(1);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureSubModeNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeNameFigure.setText(&quot;Submode Name&quot;);&#xA;&#xA;this.add(fFigureSubModeNameFigure);&#xA;&#xA;&#xA;&#xA;fFigureSubModeInitializationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeInitializationFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureSubModeInitializationFigure);&#xA;&#xA;&#xA;&#xA;fFigureSubModeInvariantFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeInvariantFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureSubModeInvariantFigure);&#xA;&#xA;&#xA;&#xA;fFigureSubModeIsUrgentFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeIsUrgentFigure.setText(&quot;false&quot;);&#xA;&#xA;this.add(fFigureSubModeIsUrgentFigure);&#xA;&#xA;/*FIXME referenced figures are just not yet fully-functional; need process attrs and layout here*/&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure variablesFigure0 = new org.eclipse.draw2d.RectangleFigure();&#xA;variablesFigure0.setLineWidth(1);&#xA;&#xA;this.add(variablesFigure0);&#xA;variablesFigure0.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#xA;/*FIXME referenced figures are just not yet fully-functional; need process attrs and layout here*/&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure resourcesFigure0 = new org.eclipse.draw2d.RectangleFigure();&#xA;resourcesFigure0.setLineWidth(1);&#xA;&#xA;this.add(resourcesFigure0);&#xA;resourcesFigure0.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeNameFigure() {&#xA;&#x9;&#x9;return fFigureSubModeNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeInitializationFigure() {&#xA;&#x9;&#x9;return fFigureSubModeInitializationFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeInvariantFigure() {&#xA;&#x9;&#x9;return fFigureSubModeInvariantFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeIsUrgentFigure() {&#xA;&#x9;&#x9;return fFigureSubModeIsUrgentFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureVariablesFigure() {&#xA;&#x9;&#x9;return fFigureVariablesFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureResourcesFigure() {&#xA;&#x9;&#x9;return fFigureResourcesFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
      <modelFacet>
        <metaClass
            href="remes.genmodel#//remes/SubMode"/>
        <containmentMetaFeature
            href="remes.genmodel#//remes/RemesDiagram/modes"/>
        <childMetaFeature
            href="remes.genmodel#//remes/RemesDiagram/modes"/>
      </modelFacet>
      <labels
          visualID="5029"
          editPartClassName="SubModeNameEditPart"
          itemSemanticEditPolicyClassName="SubModeNameItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureSubModeNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0"
            editPattern="">
          <metaFeatures
              href="remes.genmodel#//remes/Mode/name"/>
          <editableMetaFeatures
              href="remes.genmodel#//remes/Mode/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5030"
          editPartClassName="SubModeInitializationEditPart"
          itemSemanticEditPolicyClassName="SubModeInitializationItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureSubModeInitializationFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="remes.genmodel#//remes/Mode/initialization"/>
          <editableMetaFeatures
              href="remes.genmodel#//remes/Mode/initialization"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5031"
          editPartClassName="SubModeInvariantEditPart"
          itemSemanticEditPolicyClassName="SubModeInvariantItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureSubModeInvariantFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="remes.genmodel#//remes/SubMode/invariant"/>
          <editableMetaFeatures
              href="remes.genmodel#//remes/SubMode/invariant"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5032"
          editPartClassName="SubModeIsUrgentEditPart"
          itemSemanticEditPolicyClassName="SubModeIsUrgentItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureSubModeIsUrgentFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="remes.genmodel#//remes/SubMode/isUrgent"/>
          <editableMetaFeatures
              href="remes.genmodel#//remes/SubMode/isUrgent"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <topLevelNodes
        visualID="2006"
        editPartClassName="CompositeModeEditPart"
        itemSemanticEditPolicyClassName="CompositeModeItemSemanticEditPolicy"
        canonicalEditPolicyClassName="CompositeModeCanonicalEditPolicy"
        compartments="//@diagram/@compartments.2 //@diagram/@compartments.3"
        graphicalNodeEditPolicyClassName="CompositeModeGraphicalNodeEditPolicy"
        createCommandClassName="CompositeModeCreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="CompositeModeEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="CompositeModeFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class CompositeModeFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureCompositeModeNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureCompositeModeInitializationFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureVariables; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public CompositeModeFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(11)&#xA;, getMapMode().DPtoLP(11)&#xA;));&#xA;this.setLineWidth(1);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.white);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureCompositeModeNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureCompositeModeNameFigure.setText(&quot;CompositeMode Name&quot;);&#xA;&#xA;this.add(fFigureCompositeModeNameFigure);&#xA;&#xA;&#xA;&#xA;fFigureCompositeModeInitializationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureCompositeModeInitializationFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureCompositeModeInitializationFigure);&#xA;&#xA;/*FIXME referenced figures are just not yet fully-functional; need process attrs and layout here*/&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure variablesFigure0 = new org.eclipse.draw2d.RectangleFigure();&#xA;variablesFigure0.setLineWidth(1);&#xA;&#xA;this.add(variablesFigure0);&#xA;variablesFigure0.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureCompositeModeNameFigure() {&#xA;&#x9;&#x9;return fFigureCompositeModeNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureCompositeModeInitializationFigure() {&#xA;&#x9;&#x9;return fFigureCompositeModeInitializationFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureVariables() {&#xA;&#x9;&#x9;return fFigureVariables;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="remes.genmodel#//remes/CompositeMode"/>
        <containmentMetaFeature
            href="remes.genmodel#//remes/RemesDiagram/modes"/>
        <childMetaFeature
            href="remes.genmodel#//remes/RemesDiagram/modes"/>
      </modelFacet>
      <labels
          visualID="5038"
          editPartClassName="CompositeModeNameEditPart"
          itemSemanticEditPolicyClassName="CompositeModeNameItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureCompositeModeNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0"
            editorPattern="">
          <metaFeatures
              href="remes.genmodel#//remes/Mode/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5039"
          editPartClassName="CompositeModeInitializationEditPart"
          itemSemanticEditPolicyClassName="CompositeModeInitializationItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureCompositeModeInitializationFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="remes.genmodel#//remes/Mode/initialization"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <links
        visualID="4019"
        editPartClassName="EntryConditionalTopInitEdgeEditPart"
        itemSemanticEditPolicyClassName="EntryConditionalTopInitEdgeItemSemanticEditPolicy"
        createCommandClassName="EntryConditionalTopInitEdgeCreateCommand"
        reorientCommandClassName="EntryConditionalTopInitEdgeReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="EntryConditionalTopInitEdgeEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="EntryConditionalTopInitEdgeFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EntryConditionalTopInitEdgeFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntryConditionalTopInitEdgeInitializationFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EntryConditionalTopInitEdgeFigure() {&#xA;&#x9;&#x9;this.setLineWidth(1);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;createContents();&#xA;&#x9;&#x9;setSourceDecoration(createSourceDecoration());&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureEntryConditionalTopInitEdgeInitializationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEntryConditionalTopInitEdgeInitializationFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;this.add(fFigureEntryConditionalTopInitEdgeInitializationFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createSourceDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setLineWidth(1);&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(9)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(11)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(9)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(-9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-5)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(-9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-7)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-8)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-9)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-10)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-11)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-10)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-9)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-8)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-7)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-5)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;df.setLineWidth(2);&#xA;&#x9;df.setForegroundColor(org.eclipse.draw2d.ColorConstants.orange);&#xA;&#x9;df.setBackgroundColor(org.eclipse.draw2d.ColorConstants.orange);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntryConditionalTopInitEdgeInitializationFigure() {&#xA;&#x9;&#x9;return fFigureEntryConditionalTopInitEdgeInitializationFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="remes.genmodel#//remes/EntryConditionalTopInitEdge"/>
        <containmentMetaFeature
            href="remes.genmodel#//remes/CompositeMode/initEdge"/>
        <childMetaFeature
            href="remes.genmodel#//remes/CompositeMode/initEdge"/>
        <sourceMetaFeature
            href="remes.genmodel#//remes/FromCompositeModeInitEdge/connectFrom"/>
        <targetMetaFeature
            href="remes.genmodel#//remes/ToConditionalConnectorEdge/connectTo"/>
      </modelFacet>
      <labels
          visualID="6019"
          editPartClassName="EntryConditionalTopInitEdgeInitializationEditPart"
          itemSemanticEditPolicyClassName="EntryConditionalTopInitEdgeInitializationItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntryConditionalTopInitEdgeInitializationFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              y="40"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="remes.genmodel#//remes/InitEdge/initialization"/>
        </modelFacet>
      </labels>
      <creationConstraints
          targetEnd="//@expressionProviders/@providers.0/@expressions.0"/>
    </links>
    <links
        visualID="4020"
        editPartClassName="EntryEdgeEditPart"
        itemSemanticEditPolicyClassName="EntryEdgeItemSemanticEditPolicy"
        createCommandClassName="EntryEdgeCreateCommand"
        reorientCommandClassName="EntryEdgeReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="EntryEdgeEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="EntryEdgeFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EntryEdgeFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntryEdgeActionGuardFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EntryEdgeFigure() {&#xA;&#x9;&#x9;this.setLineWidth(1);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;createContents();&#xA;&#x9;&#x9;setSourceDecoration(createSourceDecoration());&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureEntryEdgeActionGuardFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEntryEdgeActionGuardFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;this.add(fFigureEntryEdgeActionGuardFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createSourceDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setLineWidth(1);&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(9)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(11)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(9)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(-9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-5)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(-9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-7)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-8)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-9)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-10)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-11)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-10)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-9)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-8)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-7)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-5)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;df.setLineWidth(2);&#xA;&#x9;df.setForegroundColor(org.eclipse.draw2d.ColorConstants.green);&#xA;&#x9;df.setBackgroundColor(org.eclipse.draw2d.ColorConstants.green);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntryEdgeActionGuardFigure() {&#xA;&#x9;&#x9;return fFigureEntryEdgeActionGuardFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="remes.genmodel#//remes/EntryEdge"/>
        <containmentMetaFeature
            href="remes.genmodel#//remes/CompositeMode/entryEdge"/>
        <childMetaFeature
            href="remes.genmodel#//remes/CompositeMode/entryEdge"/>
        <sourceMetaFeature
            href="remes.genmodel#//remes/FromCompositeModeEdge/connectFrom"/>
        <targetMetaFeature
            href="remes.genmodel#//remes/ToSubModeEdge/connectTo"/>
      </modelFacet>
      <labels
          visualID="6020"
          editPartClassName="EntryEdgeActionGuardEditPart"
          itemSemanticEditPolicyClassName="EntryEdgeActionGuardItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntryEdgeActionGuardFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              y="40"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0"
            editorPattern="">
          <metaFeatures
              href="remes.genmodel#//remes/Edge/actionGuard"/>
        </modelFacet>
      </labels>
      <creationConstraints
          targetEnd="//@expressionProviders/@providers.0/@expressions.1"/>
    </links>
    <links
        visualID="4021"
        editPartClassName="InternalEdgeEditPart"
        itemSemanticEditPolicyClassName="InternalEdgeItemSemanticEditPolicy"
        createCommandClassName="InternalEdgeCreateCommand"
        reorientCommandClassName="InternalEdgeReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="InternalEdgeEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="InternalEdgeFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class InternalEdgeFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureInternalEdgeActionGuardFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public InternalEdgeFigure() {&#xA;&#x9;&#x9;this.setLineWidth(1);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;createContents();&#xA;&#x9;&#x9;setSourceDecoration(createSourceDecoration());&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureInternalEdgeActionGuardFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureInternalEdgeActionGuardFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;this.add(fFigureInternalEdgeActionGuardFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createSourceDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setLineWidth(1);&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(9)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(11)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(9)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(-9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-5)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(-9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-7)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-8)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-9)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-10)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-11)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-10)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-9)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-8)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-7)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-5)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;df.setLineWidth(2);&#xA;&#x9;df.setForegroundColor(org.eclipse.draw2d.ColorConstants.green);&#xA;&#x9;df.setBackgroundColor(org.eclipse.draw2d.ColorConstants.green);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureInternalEdgeActionGuardFigure() {&#xA;&#x9;&#x9;return fFigureInternalEdgeActionGuardFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="remes.genmodel#//remes/InternalEdge"/>
        <containmentMetaFeature
            href="remes.genmodel#//remes/SubMode/exitEdges"/>
        <childMetaFeature
            href="remes.genmodel#//remes/SubMode/exitEdges"/>
        <sourceMetaFeature
            href="remes.genmodel#//remes/FromSubModeEdge/connectFrom"/>
        <targetMetaFeature
            href="remes.genmodel#//remes/ToSubModeEdge/connectTo"/>
      </modelFacet>
      <labels
          visualID="6021"
          editPartClassName="InternalEdgeActionGuardEditPart"
          itemSemanticEditPolicyClassName="InternalEdgeActionGuardItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureInternalEdgeActionGuardFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              y="40"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="remes.genmodel#//remes/Edge/actionGuard"/>
        </modelFacet>
      </labels>
      <creationConstraints
          sourceEnd="//@expressionProviders/@providers.0/@expressions.2"
          targetEnd="//@expressionProviders/@providers.0/@expressions.3"/>
    </links>
    <links
        visualID="4022"
        editPartClassName="ExitConditionalSubEdgeEditPart"
        itemSemanticEditPolicyClassName="ExitConditionalSubEdgeItemSemanticEditPolicy"
        createCommandClassName="ExitConditionalSubEdgeCreateCommand"
        reorientCommandClassName="ExitConditionalSubEdgeReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ExitConditionalSubEdgeEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ExitConditionalSubEdgeFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ExitConditionalSubEdgeFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureExitConditionalSubEdgeActionGuardFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ExitConditionalSubEdgeFigure() {&#xA;&#x9;&#x9;this.setLineWidth(1);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;createContents();&#xA;&#x9;&#x9;setSourceDecoration(createSourceDecoration());&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureExitConditionalSubEdgeActionGuardFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureExitConditionalSubEdgeActionGuardFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;this.add(fFigureExitConditionalSubEdgeActionGuardFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createSourceDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setLineWidth(1);&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(9)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(11)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(9)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(-9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-5)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(-9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-7)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-8)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-9)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-10)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-11)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-10)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-9)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-8)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-7)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-5)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;df.setLineWidth(2);&#xA;&#x9;df.setForegroundColor(org.eclipse.draw2d.ColorConstants.green);&#xA;&#x9;df.setBackgroundColor(org.eclipse.draw2d.ColorConstants.green);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureExitConditionalSubEdgeActionGuardFigure() {&#xA;&#x9;&#x9;return fFigureExitConditionalSubEdgeActionGuardFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="remes.genmodel#//remes/ExitConditionalSubEdge"/>
        <containmentMetaFeature
            href="remes.genmodel#//remes/SubMode/exitEdges"/>
        <childMetaFeature
            href="remes.genmodel#//remes/SubMode/exitEdges"/>
        <sourceMetaFeature
            href="remes.genmodel#//remes/FromSubModeEdge/connectFrom"/>
        <targetMetaFeature
            href="remes.genmodel#//remes/ToConditionalConnectorEdge/connectTo"/>
      </modelFacet>
      <labels
          visualID="6022"
          editPartClassName="ExitConditionalSubEdgeActionGuardEditPart"
          itemSemanticEditPolicyClassName="ExitConditionalSubEdgeActionGuardItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureExitConditionalSubEdgeActionGuardFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              y="40"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="remes.genmodel#//remes/Edge/actionGuard"/>
        </modelFacet>
      </labels>
      <creationConstraints
          sourceEnd="//@expressionProviders/@providers.0/@expressions.4"
          targetEnd="//@expressionProviders/@providers.0/@expressions.5"/>
    </links>
    <links
        visualID="4023"
        editPartClassName="EntryConditionalTopEdgeEditPart"
        itemSemanticEditPolicyClassName="EntryConditionalTopEdgeItemSemanticEditPolicy"
        createCommandClassName="EntryConditionalTopEdgeCreateCommand"
        reorientCommandClassName="EntryConditionalTopEdgeReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="EntryConditionalTopEdgeEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="EntryConditionalTopEdgeFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EntryConditionalTopEdgeFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntryConditionalTopEdgeActionGuardFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EntryConditionalTopEdgeFigure() {&#xA;&#x9;&#x9;this.setLineWidth(1);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;createContents();&#xA;&#x9;&#x9;setSourceDecoration(createSourceDecoration());&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureEntryConditionalTopEdgeActionGuardFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEntryConditionalTopEdgeActionGuardFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;this.add(fFigureEntryConditionalTopEdgeActionGuardFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createSourceDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setLineWidth(1);&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(9)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(11)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(9)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(-9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-5)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(-9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-7)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-8)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-9)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-10)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-11)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-10)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-9)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-8)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-7)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-5)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;df.setLineWidth(2);&#xA;&#x9;df.setForegroundColor(org.eclipse.draw2d.ColorConstants.green);&#xA;&#x9;df.setBackgroundColor(org.eclipse.draw2d.ColorConstants.green);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntryConditionalTopEdgeActionGuardFigure() {&#xA;&#x9;&#x9;return fFigureEntryConditionalTopEdgeActionGuardFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="remes.genmodel#//remes/EntryConditionalTopEdge"/>
        <containmentMetaFeature
            href="remes.genmodel#//remes/CompositeMode/entryEdge"/>
        <childMetaFeature
            href="remes.genmodel#//remes/CompositeMode/entryEdge"/>
        <sourceMetaFeature
            href="remes.genmodel#//remes/FromCompositeModeEdge/connectFrom"/>
        <targetMetaFeature
            href="remes.genmodel#//remes/ToConditionalConnectorEdge/connectTo"/>
      </modelFacet>
      <labels
          visualID="6023"
          editPartClassName="EntryConditionalTopEdgeActionGuardEditPart"
          itemSemanticEditPolicyClassName="EntryConditionalTopEdgeActionGuardItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntryConditionalTopEdgeActionGuardFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              y="40"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="remes.genmodel#//remes/Edge/actionGuard"/>
        </modelFacet>
      </labels>
      <creationConstraints
          targetEnd="//@expressionProviders/@providers.0/@expressions.6"/>
    </links>
    <links
        visualID="4024"
        editPartClassName="ExitEdgeEditPart"
        itemSemanticEditPolicyClassName="ExitEdgeItemSemanticEditPolicy"
        createCommandClassName="ExitEdgeCreateCommand"
        reorientCommandClassName="ExitEdgeReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ExitEdgeEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ExitEdgeFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ExitEdgeFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureExitEdgeActionGuardFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ExitEdgeFigure() {&#xA;&#x9;&#x9;this.setLineWidth(1);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;createContents();&#xA;&#x9;&#x9;setSourceDecoration(createSourceDecoration());&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureExitEdgeActionGuardFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureExitEdgeActionGuardFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;this.add(fFigureExitEdgeActionGuardFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createSourceDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setLineWidth(1);&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(9)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(11)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(9)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(-9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-5)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(-9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-7)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-8)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-9)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-10)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-11)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-10)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-9)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-8)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-7)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-5)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;df.setLineWidth(2);&#xA;&#x9;df.setForegroundColor(org.eclipse.draw2d.ColorConstants.red);&#xA;&#x9;df.setBackgroundColor(org.eclipse.draw2d.ColorConstants.red);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureExitEdgeActionGuardFigure() {&#xA;&#x9;&#x9;return fFigureExitEdgeActionGuardFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="remes.genmodel#//remes/ExitEdge"/>
        <containmentMetaFeature
            href="remes.genmodel#//remes/SubMode/exitEdges"/>
        <childMetaFeature
            href="remes.genmodel#//remes/SubMode/exitEdges"/>
        <sourceMetaFeature
            href="remes.genmodel#//remes/FromSubModeEdge/connectFrom"/>
        <targetMetaFeature
            href="remes.genmodel#//remes/ToCompositeModeEdge/connectTo"/>
      </modelFacet>
      <labels
          visualID="6024"
          editPartClassName="ExitEdgeActionGuardEditPart"
          itemSemanticEditPolicyClassName="ExitEdgeActionGuardItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureExitEdgeActionGuardFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              y="40"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="remes.genmodel#//remes/Edge/actionGuard"/>
        </modelFacet>
      </labels>
      <creationConstraints
          sourceEnd="//@expressionProviders/@providers.0/@expressions.7"
          targetEnd="//@expressionProviders/@providers.0/@expressions.8"/>
    </links>
    <links
        visualID="4025"
        editPartClassName="EntryInitEdgeEditPart"
        itemSemanticEditPolicyClassName="EntryInitEdgeItemSemanticEditPolicy"
        createCommandClassName="EntryInitEdgeCreateCommand"
        reorientCommandClassName="EntryInitEdgeReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="EntryInitEdgeEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="EntryInitEdgeFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EntryInitEdgeFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntryInitEdgeInitializationFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EntryInitEdgeFigure() {&#xA;&#x9;&#x9;this.setLineWidth(1);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;createContents();&#xA;&#x9;&#x9;setSourceDecoration(createSourceDecoration());&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureEntryInitEdgeInitializationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEntryInitEdgeInitializationFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;this.add(fFigureEntryInitEdgeInitializationFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createSourceDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setLineWidth(1);&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(9)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(11)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(9)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(-9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-5)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(-9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-7)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-8)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-9)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-10)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-11)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-10)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-9)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-8)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-7)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-5)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;df.setLineWidth(2);&#xA;&#x9;df.setForegroundColor(org.eclipse.draw2d.ColorConstants.orange);&#xA;&#x9;df.setBackgroundColor(org.eclipse.draw2d.ColorConstants.orange);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntryInitEdgeInitializationFigure() {&#xA;&#x9;&#x9;return fFigureEntryInitEdgeInitializationFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="remes.genmodel#//remes/EntryInitEdge"/>
        <containmentMetaFeature
            href="remes.genmodel#//remes/CompositeMode/initEdge"/>
        <childMetaFeature
            href="remes.genmodel#//remes/CompositeMode/initEdge"/>
        <sourceMetaFeature
            href="remes.genmodel#//remes/FromCompositeModeInitEdge/connectFrom"/>
        <targetMetaFeature
            href="remes.genmodel#//remes/ToSubModeEdge/connectTo"/>
      </modelFacet>
      <labels
          visualID="6025"
          editPartClassName="EntryInitEdgeInitializationEditPart"
          itemSemanticEditPolicyClassName="EntryInitEdgeInitializationItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntryInitEdgeInitializationFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              y="40"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="remes.genmodel#//remes/InitEdge/initialization"/>
        </modelFacet>
      </labels>
      <creationConstraints
          targetEnd="//@expressionProviders/@providers.0/@expressions.9"/>
    </links>
    <links
        visualID="4026"
        editPartClassName="ExitConditionalTopEdgeEditPart"
        itemSemanticEditPolicyClassName="ExitConditionalTopEdgeItemSemanticEditPolicy"
        createCommandClassName="ExitConditionalTopEdgeCreateCommand"
        reorientCommandClassName="ExitConditionalTopEdgeReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ExitConditionalTopEdgeEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ExitConditionalTopEdgeFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ExitConditionalTopEdgeFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureExitConditionalTopEdgeActionGuardFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ExitConditionalTopEdgeFigure() {&#xA;&#x9;&#x9;this.setLineWidth(1);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;createContents();&#xA;&#x9;&#x9;setSourceDecoration(createSourceDecoration());&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureExitConditionalTopEdgeActionGuardFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureExitConditionalTopEdgeActionGuardFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;this.add(fFigureExitConditionalTopEdgeActionGuardFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createSourceDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setLineWidth(1);&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(9)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(11)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(9)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(-9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-5)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(-9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-7)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-8)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-9)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-10)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-11)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-10)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-9)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-8)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-7)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-5)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;df.setLineWidth(2);&#xA;&#x9;df.setForegroundColor(org.eclipse.draw2d.ColorConstants.red);&#xA;&#x9;df.setBackgroundColor(org.eclipse.draw2d.ColorConstants.red);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureExitConditionalTopEdgeActionGuardFigure() {&#xA;&#x9;&#x9;return fFigureExitConditionalTopEdgeActionGuardFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="remes.genmodel#//remes/ExitConditionalTopEdge"/>
        <containmentMetaFeature
            href="remes.genmodel#//remes/ConditionalConnector/exitEdges"/>
        <childMetaFeature
            href="remes.genmodel#//remes/ConditionalConnector/exitEdges"/>
        <sourceMetaFeature
            href="remes.genmodel#//remes/FromConditionalConnectorEdge/connectFrom"/>
        <targetMetaFeature
            href="remes.genmodel#//remes/ToCompositeModeEdge/connectTo"/>
      </modelFacet>
      <labels
          visualID="6026"
          editPartClassName="ExitConditionalTopEdgeActionGuardEditPart"
          itemSemanticEditPolicyClassName="ExitConditionalTopEdgeActionGuardItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureExitConditionalTopEdgeActionGuardFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              y="40"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="remes.genmodel#//remes/Edge/actionGuard"/>
        </modelFacet>
      </labels>
      <creationConstraints
          targetEnd="//@expressionProviders/@providers.0/@expressions.10"/>
    </links>
    <links
        visualID="4027"
        editPartClassName="EntryConditionalSubEdgeEditPart"
        itemSemanticEditPolicyClassName="EntryConditionalSubEdgeItemSemanticEditPolicy"
        createCommandClassName="EntryConditionalSubEdgeCreateCommand"
        reorientCommandClassName="EntryConditionalSubEdgeReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="EntryConditionalSubEdgeEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="EntryConditionalSubEdgeFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class EntryConditionalSubEdgeFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEntryConditionalSubEdgeActionGuardFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public EntryConditionalSubEdgeFigure() {&#xA;&#x9;&#x9;this.setLineWidth(1);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;createContents();&#xA;&#x9;&#x9;setSourceDecoration(createSourceDecoration());&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureEntryConditionalSubEdgeActionGuardFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureEntryConditionalSubEdgeActionGuardFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;this.add(fFigureEntryConditionalSubEdgeActionGuardFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createSourceDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setLineWidth(1);&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(9)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(11)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(9)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(-9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(-11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-5)&#xA;, getMapMode().DPtoLP(-10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(-9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-7)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-8)&#xA;, getMapMode().DPtoLP(-8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-9)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-10)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-11)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-10)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-9)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-8)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-7)&#xA;, getMapMode().DPtoLP(8)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(9)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-5)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(10)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(11)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;df.setLineWidth(2);&#xA;&#x9;df.setForegroundColor(org.eclipse.draw2d.ColorConstants.green);&#xA;&#x9;df.setBackgroundColor(org.eclipse.draw2d.ColorConstants.green);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEntryConditionalSubEdgeActionGuardFigure() {&#xA;&#x9;&#x9;return fFigureEntryConditionalSubEdgeActionGuardFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="remes.genmodel#//remes/EntryConditionalSubEdge"/>
        <containmentMetaFeature
            href="remes.genmodel#//remes/ConditionalConnector/exitEdges"/>
        <childMetaFeature
            href="remes.genmodel#//remes/ConditionalConnector/exitEdges"/>
        <sourceMetaFeature
            href="remes.genmodel#//remes/FromConditionalConnectorEdge/connectFrom"/>
        <targetMetaFeature
            href="remes.genmodel#//remes/ToSubModeEdge/connectTo"/>
      </modelFacet>
      <labels
          visualID="6027"
          editPartClassName="EntryConditionalSubEdgeActionGuardEditPart"
          itemSemanticEditPolicyClassName="EntryConditionalSubEdgeActionGuardItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureEntryConditionalSubEdgeActionGuardFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              y="40"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="remes.genmodel#//remes/Edge/actionGuard"/>
        </modelFacet>
      </labels>
      <creationConstraints
          targetEnd="//@expressionProviders/@providers.0/@expressions.11"/>
    </links>
    <compartments
        visualID="7013"
        editPartClassName="SubModeSubModeVariablesCompartmentEditPart"
        itemSemanticEditPolicyClassName="SubModeSubModeVariablesCompartmentItemSemanticEditPolicy"
        canonicalEditPolicyClassName="SubModeSubModeVariablesCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.0"
        title="SubModeVariablesCompartment"
        node="//@diagram/@topLevelNodes.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="SubModeFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class SubModeFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeInitializationFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeInvariantFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeIsUrgentFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureVariablesFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureResourcesFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public SubModeFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;));&#xA;this.setLineWidth(1);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureSubModeNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeNameFigure.setText(&quot;Submode Name&quot;);&#xA;&#xA;this.add(fFigureSubModeNameFigure);&#xA;&#xA;&#xA;&#xA;fFigureSubModeInitializationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeInitializationFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureSubModeInitializationFigure);&#xA;&#xA;&#xA;&#xA;fFigureSubModeInvariantFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeInvariantFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureSubModeInvariantFigure);&#xA;&#xA;&#xA;&#xA;fFigureSubModeIsUrgentFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeIsUrgentFigure.setText(&quot;false&quot;);&#xA;&#xA;this.add(fFigureSubModeIsUrgentFigure);&#xA;&#xA;/*FIXME referenced figures are just not yet fully-functional; need process attrs and layout here*/&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure variablesFigure0 = new org.eclipse.draw2d.RectangleFigure();&#xA;variablesFigure0.setLineWidth(1);&#xA;&#xA;this.add(variablesFigure0);&#xA;variablesFigure0.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#xA;/*FIXME referenced figures are just not yet fully-functional; need process attrs and layout here*/&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure resourcesFigure0 = new org.eclipse.draw2d.RectangleFigure();&#xA;resourcesFigure0.setLineWidth(1);&#xA;&#xA;this.add(resourcesFigure0);&#xA;resourcesFigure0.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeNameFigure() {&#xA;&#x9;&#x9;return fFigureSubModeNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeInitializationFigure() {&#xA;&#x9;&#x9;return fFigureSubModeInitializationFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeInvariantFigure() {&#xA;&#x9;&#x9;return fFigureSubModeInvariantFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeIsUrgentFigure() {&#xA;&#x9;&#x9;return fFigureSubModeIsUrgentFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureVariablesFigure() {&#xA;&#x9;&#x9;return fFigureVariablesFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureResourcesFigure() {&#xA;&#x9;&#x9;return fFigureResourcesFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
    </compartments>
    <compartments
        visualID="7014"
        editPartClassName="SubModeSubModeResourcesCompartmentEditPart"
        itemSemanticEditPolicyClassName="SubModeSubModeResourcesCompartmentItemSemanticEditPolicy"
        canonicalEditPolicyClassName="SubModeSubModeResourcesCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.1"
        title="SubModeResourcesCompartment"
        node="//@diagram/@topLevelNodes.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="SubModeFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class SubModeFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeInitializationFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeInvariantFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeIsUrgentFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureVariablesFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureResourcesFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public SubModeFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;));&#xA;this.setLineWidth(1);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureSubModeNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeNameFigure.setText(&quot;Submode Name&quot;);&#xA;&#xA;this.add(fFigureSubModeNameFigure);&#xA;&#xA;&#xA;&#xA;fFigureSubModeInitializationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeInitializationFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureSubModeInitializationFigure);&#xA;&#xA;&#xA;&#xA;fFigureSubModeInvariantFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeInvariantFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureSubModeInvariantFigure);&#xA;&#xA;&#xA;&#xA;fFigureSubModeIsUrgentFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeIsUrgentFigure.setText(&quot;false&quot;);&#xA;&#xA;this.add(fFigureSubModeIsUrgentFigure);&#xA;&#xA;/*FIXME referenced figures are just not yet fully-functional; need process attrs and layout here*/&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure variablesFigure0 = new org.eclipse.draw2d.RectangleFigure();&#xA;variablesFigure0.setLineWidth(1);&#xA;&#xA;this.add(variablesFigure0);&#xA;variablesFigure0.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#xA;/*FIXME referenced figures are just not yet fully-functional; need process attrs and layout here*/&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure resourcesFigure0 = new org.eclipse.draw2d.RectangleFigure();&#xA;resourcesFigure0.setLineWidth(1);&#xA;&#xA;this.add(resourcesFigure0);&#xA;resourcesFigure0.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeNameFigure() {&#xA;&#x9;&#x9;return fFigureSubModeNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeInitializationFigure() {&#xA;&#x9;&#x9;return fFigureSubModeInitializationFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeInvariantFigure() {&#xA;&#x9;&#x9;return fFigureSubModeInvariantFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeIsUrgentFigure() {&#xA;&#x9;&#x9;return fFigureSubModeIsUrgentFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureVariablesFigure() {&#xA;&#x9;&#x9;return fFigureVariablesFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureResourcesFigure() {&#xA;&#x9;&#x9;return fFigureResourcesFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
    </compartments>
    <compartments
        visualID="7015"
        editPartClassName="CompositeModeCompositeModeVariablesCompartmentEditPart"
        itemSemanticEditPolicyClassName="CompositeModeCompositeModeVariablesCompartmentItemSemanticEditPolicy"
        canonicalEditPolicyClassName="CompositeModeCompositeModeVariablesCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.6"
        title="CompositeModeVariablesCompartment"
        node="//@diagram/@topLevelNodes.1">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="CompositeModeFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class CompositeModeFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureCompositeModeNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureCompositeModeInitializationFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureVariables; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public CompositeModeFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(11)&#xA;, getMapMode().DPtoLP(11)&#xA;));&#xA;this.setLineWidth(1);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.white);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureCompositeModeNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureCompositeModeNameFigure.setText(&quot;CompositeMode Name&quot;);&#xA;&#xA;this.add(fFigureCompositeModeNameFigure);&#xA;&#xA;&#xA;&#xA;fFigureCompositeModeInitializationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureCompositeModeInitializationFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureCompositeModeInitializationFigure);&#xA;&#xA;/*FIXME referenced figures are just not yet fully-functional; need process attrs and layout here*/&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure variablesFigure0 = new org.eclipse.draw2d.RectangleFigure();&#xA;variablesFigure0.setLineWidth(1);&#xA;&#xA;this.add(variablesFigure0);&#xA;variablesFigure0.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureCompositeModeNameFigure() {&#xA;&#x9;&#x9;return fFigureCompositeModeNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureCompositeModeInitializationFigure() {&#xA;&#x9;&#x9;return fFigureCompositeModeInitializationFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureVariables() {&#xA;&#x9;&#x9;return fFigureVariables;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedBackground="true"/>
      </viewmap>
    </compartments>
    <compartments
        visualID="7016"
        editPartClassName="CompositeModeCompositeModeCompartmentEditPart"
        itemSemanticEditPolicyClassName="CompositeModeCompositeModeCompartmentItemSemanticEditPolicy"
        canonicalEditPolicyClassName="CompositeModeCompositeModeCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.2 //@diagram/@childNodes.5"
        title="CompositeModeCompartment"
        needsTitle="false"
        node="//@diagram/@topLevelNodes.1"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="CompositeModeFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class CompositeModeFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureCompositeModeNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureCompositeModeInitializationFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureVariables; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public CompositeModeFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(11)&#xA;, getMapMode().DPtoLP(11)&#xA;));&#xA;this.setLineWidth(1);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.white);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureCompositeModeNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureCompositeModeNameFigure.setText(&quot;CompositeMode Name&quot;);&#xA;&#xA;this.add(fFigureCompositeModeNameFigure);&#xA;&#xA;&#xA;&#xA;fFigureCompositeModeInitializationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureCompositeModeInitializationFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureCompositeModeInitializationFigure);&#xA;&#xA;/*FIXME referenced figures are just not yet fully-functional; need process attrs and layout here*/&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure variablesFigure0 = new org.eclipse.draw2d.RectangleFigure();&#xA;variablesFigure0.setLineWidth(1);&#xA;&#xA;this.add(variablesFigure0);&#xA;variablesFigure0.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureCompositeModeNameFigure() {&#xA;&#x9;&#x9;return fFigureCompositeModeNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureCompositeModeInitializationFigure() {&#xA;&#x9;&#x9;return fFigureCompositeModeInitializationFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureVariables() {&#xA;&#x9;&#x9;return fFigureVariables;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedBackground="true"/>
      </viewmap>
    </compartments>
    <compartments
        visualID="7017"
        editPartClassName="SubModeSubModeVariablesCompartment2EditPart"
        itemSemanticEditPolicyClassName="SubModeSubModeVariablesCompartment2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="SubModeSubModeVariablesCompartment2CanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.3"
        title="SubModeVariablesCompartment"
        node="//@diagram/@childNodes.2">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="SubModeFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class SubModeFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeInitializationFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeInvariantFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeIsUrgentFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureVariablesFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureResourcesFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public SubModeFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;));&#xA;this.setLineWidth(1);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureSubModeNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeNameFigure.setText(&quot;Submode Name&quot;);&#xA;&#xA;this.add(fFigureSubModeNameFigure);&#xA;&#xA;&#xA;&#xA;fFigureSubModeInitializationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeInitializationFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureSubModeInitializationFigure);&#xA;&#xA;&#xA;&#xA;fFigureSubModeInvariantFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeInvariantFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureSubModeInvariantFigure);&#xA;&#xA;&#xA;&#xA;fFigureSubModeIsUrgentFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeIsUrgentFigure.setText(&quot;false&quot;);&#xA;&#xA;this.add(fFigureSubModeIsUrgentFigure);&#xA;&#xA;/*FIXME referenced figures are just not yet fully-functional; need process attrs and layout here*/&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure variablesFigure0 = new org.eclipse.draw2d.RectangleFigure();&#xA;variablesFigure0.setLineWidth(1);&#xA;&#xA;this.add(variablesFigure0);&#xA;variablesFigure0.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#xA;/*FIXME referenced figures are just not yet fully-functional; need process attrs and layout here*/&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure resourcesFigure0 = new org.eclipse.draw2d.RectangleFigure();&#xA;resourcesFigure0.setLineWidth(1);&#xA;&#xA;this.add(resourcesFigure0);&#xA;resourcesFigure0.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeNameFigure() {&#xA;&#x9;&#x9;return fFigureSubModeNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeInitializationFigure() {&#xA;&#x9;&#x9;return fFigureSubModeInitializationFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeInvariantFigure() {&#xA;&#x9;&#x9;return fFigureSubModeInvariantFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeIsUrgentFigure() {&#xA;&#x9;&#x9;return fFigureSubModeIsUrgentFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureVariablesFigure() {&#xA;&#x9;&#x9;return fFigureVariablesFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureResourcesFigure() {&#xA;&#x9;&#x9;return fFigureResourcesFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
    </compartments>
    <compartments
        visualID="7018"
        editPartClassName="SubModeSubModeResourcesCompartment2EditPart"
        itemSemanticEditPolicyClassName="SubModeSubModeResourcesCompartment2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="SubModeSubModeResourcesCompartment2CanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.4"
        title="SubModeResourcesCompartment"
        node="//@diagram/@childNodes.2">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="SubModeFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class SubModeFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeInitializationFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeInvariantFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSubModeIsUrgentFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureVariablesFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureResourcesFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public SubModeFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;));&#xA;this.setLineWidth(1);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureSubModeNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeNameFigure.setText(&quot;Submode Name&quot;);&#xA;&#xA;this.add(fFigureSubModeNameFigure);&#xA;&#xA;&#xA;&#xA;fFigureSubModeInitializationFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeInitializationFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureSubModeInitializationFigure);&#xA;&#xA;&#xA;&#xA;fFigureSubModeInvariantFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeInvariantFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureSubModeInvariantFigure);&#xA;&#xA;&#xA;&#xA;fFigureSubModeIsUrgentFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureSubModeIsUrgentFigure.setText(&quot;false&quot;);&#xA;&#xA;this.add(fFigureSubModeIsUrgentFigure);&#xA;&#xA;/*FIXME referenced figures are just not yet fully-functional; need process attrs and layout here*/&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure variablesFigure0 = new org.eclipse.draw2d.RectangleFigure();&#xA;variablesFigure0.setLineWidth(1);&#xA;&#xA;this.add(variablesFigure0);&#xA;variablesFigure0.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#xA;/*FIXME referenced figures are just not yet fully-functional; need process attrs and layout here*/&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure resourcesFigure0 = new org.eclipse.draw2d.RectangleFigure();&#xA;resourcesFigure0.setLineWidth(1);&#xA;&#xA;this.add(resourcesFigure0);&#xA;resourcesFigure0.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeNameFigure() {&#xA;&#x9;&#x9;return fFigureSubModeNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeInitializationFigure() {&#xA;&#x9;&#x9;return fFigureSubModeInitializationFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeInvariantFigure() {&#xA;&#x9;&#x9;return fFigureSubModeInvariantFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSubModeIsUrgentFigure() {&#xA;&#x9;&#x9;return fFigureSubModeIsUrgentFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureVariablesFigure() {&#xA;&#x9;&#x9;return fFigureVariablesFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureResourcesFigure() {&#xA;&#x9;&#x9;return fFigureResourcesFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
    </compartments>
    <palette>
      <groups
          title="Default"
          description="Holds top-level non-container tools">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Variable"
            description="Create new Variable"
            genNodes="//@diagram/@childNodes.0 //@diagram/@childNodes.3 //@diagram/@childNodes.6"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Resource"
            description="Create new Resource"
            genNodes="//@diagram/@childNodes.1 //@diagram/@childNodes.4"/>
      </groups>
      <groups
          title="Nodes"
          collapse="true">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="SubMode"
            description="Create new SubMode"
            smallIconPath="/se.mdh.progresside.remes.diagram/icons/submode.gif"
            genNodes="//@diagram/@topLevelNodes.0 //@diagram/@childNodes.2"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="ConditionalConnector"
            description="Create new ConditionalConnector"
            smallIconPath="/se.mdh.progresside.remes.diagram/icons/conditionalconnector.gif"
            genNodes="//@diagram/@childNodes.5"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="CompositeMode"
            description="Create new CompositeMode"
            smallIconPath="/se.mdh.progresside.remes.diagram/icons/compositemode.gif"
            genNodes="//@diagram/@topLevelNodes.1"/>
      </groups>
      <groups
          title="Edges"
          collapse="true">
        <entries
            xsi:type="gmfgen:Separator"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="EntryInitEdge"
            description="Create new EntryInitEdge"
            smallIconPath="/se.mdh.progresside.remes.diagram/icons/initEdge.gif"
            genLinks="//@diagram/@links.6"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="EntryConditionalTopInitEdge"
            description="Create new EntryConditionalTopInitEdge"
            smallIconPath="/se.mdh.progresside.remes.diagram/icons/initCondEdge.gif"
            genLinks="//@diagram/@links.0"/>
        <entries
            xsi:type="gmfgen:Separator"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="EntryEdge"
            description="Create new EntryEdge"
            smallIconPath="/se.mdh.progresside.remes.diagram/icons/entryEdge.gif"
            genLinks="//@diagram/@links.1"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="EntryConditionalTopEdge"
            description="Create new EntryConditionalTopEdge"
            smallIconPath="/se.mdh.progresside.remes.diagram/icons/entryCondEdge.gif"
            genLinks="//@diagram/@links.4"/>
        <entries
            xsi:type="gmfgen:Separator"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="InternalEdge"
            description="Create new InternalEdge"
            smallIconPath="/se.mdh.progresside.remes.diagram/icons/InternalEdge.gif"
            genLinks="//@diagram/@links.2"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="EntryConditionalSubEdge"
            description="Create new EntryConditionalSubEdge"
            smallIconPath="/se.mdh.progresside.remes.diagram/icons/condToSubEdge.gif"
            genLinks="//@diagram/@links.8"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="ExitConditionalSubEdge"
            description="Create new ExitConditionalSubEdge"
            smallIconPath="/se.mdh.progresside.remes.diagram/icons/subModeToCondEdge.gif"
            genLinks="//@diagram/@links.3"/>
        <entries
            xsi:type="gmfgen:Separator"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="ExitEdge"
            description="Create new ExitEdge"
            smallIconPath="/se.mdh.progresside.remes.diagram/icons/ExitEdge.gif"
            genLinks="//@diagram/@links.5"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="ExitConditionalTopEdge"
            description="Create new ExitConditionalTopEdge"
            smallIconPath="/se.mdh.progresside.remes.diagram/icons/condExitTopEdge.gif"
            genLinks="//@diagram/@links.7"/>
      </groups>
    </palette>
    <preferencePages
        xsi:type="gmfgen:GenStandardPreferencePage"
        iD="remes.diagram.general"
        name="Remes Diagram">
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="remes.diagram.appearance"
          name="Appearance"
          kind="Appearance"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="remes.diagram.connections"
          name="Connections"
          kind="Connections"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="remes.diagram.printing"
          name="Printing"
          kind="Printing"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="remes.diagram.rulersAndGrid"
          name="Rulers And Grid"
          kind="RulersAndGrid"/>
    </preferencePages>
  </diagram>
  <plugin
      version="1.1.0.qualifier">
    <requiredPlugins>org.eclipse.draw2d</requiredPlugins>
    <requiredPlugins>org.eclipse.gmf.runtime.draw2d.ui</requiredPlugins>
  </plugin>
  <editor/>
  <navigator>
    <childReferences
        child="//@diagram"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.0"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.1"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.0"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@childNodes.3"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@childNodes.4"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.1"
        child="//@diagram/@childNodes.2"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.1"
        child="//@diagram/@childNodes.5"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.1"
        child="//@diagram/@childNodes.6"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.1"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.0"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.5"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.5"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.1"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.1"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.1"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@topLevelNodes.0"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@links.1"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@childNodes.2"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@links.1"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@topLevelNodes.1"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.1"
        child="//@diagram/@links.1"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.2"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.2"
        child="//@diagram/@topLevelNodes.0"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@links.2"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.2"
        child="//@diagram/@childNodes.2"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@links.2"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.2"
        child="//@diagram/@topLevelNodes.0"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@links.2"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.2"
        child="//@diagram/@childNodes.2"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@links.2"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.3"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.3"
        child="//@diagram/@childNodes.5"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.5"
        child="//@diagram/@links.3"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.3"
        child="//@diagram/@topLevelNodes.0"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@links.3"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.3"
        child="//@diagram/@childNodes.2"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@links.3"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.4"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.4"
        child="//@diagram/@childNodes.5"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.5"
        child="//@diagram/@links.4"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.4"
        child="//@diagram/@topLevelNodes.1"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.1"
        child="//@diagram/@links.4"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.5"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.5"
        child="//@diagram/@topLevelNodes.1"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.1"
        child="//@diagram/@links.5"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.5"
        child="//@diagram/@topLevelNodes.0"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@links.5"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.5"
        child="//@diagram/@childNodes.2"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@links.5"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.6"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.6"
        child="//@diagram/@topLevelNodes.0"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@links.6"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.6"
        child="//@diagram/@childNodes.2"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@links.6"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.6"
        child="//@diagram/@topLevelNodes.1"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.1"
        child="//@diagram/@links.6"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.7"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.7"
        child="//@diagram/@topLevelNodes.1"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.1"
        child="//@diagram/@links.7"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.7"
        child="//@diagram/@childNodes.5"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.5"
        child="//@diagram/@links.7"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.8"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.8"
        child="//@diagram/@topLevelNodes.0"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@links.8"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.8"
        child="//@diagram/@childNodes.2"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@links.8"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.8"
        child="//@diagram/@childNodes.5"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.5"
        child="//@diagram/@links.8"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
  </navigator>
  <diagramUpdater/>
  <propertySheet>
    <tabs
        xsi:type="gmfgen:GenStandardPropertyTab"
        iD="appearance"/>
    <tabs
        xsi:type="gmfgen:GenStandardPropertyTab"
        iD="diagram"/>
    <tabs
        xsi:type="gmfgen:GenCustomPropertyTab"
        iD="domain"
        label="Core">
      <filter
          xsi:type="gmfgen:TypeTabFilter">
        <types>org.eclipse.gmf.runtime.notation.View</types>
        <types>org.eclipse.gef.EditPart</types>
        <generatedTypes>abstractNavigatorItem</generatedTypes>
      </filter>
    </tabs>
  </propertySheet>
  <domainGenModel
      href="remes.genmodel#/"/>
  <expressionProviders>
    <providers
        xsi:type="gmfgen:GenExpressionInterpreter">
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="oppositeEnd.conditionalConnectors->exists(c | c = self)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="oppositeEnd.subModes->exists(s | s = self)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self &lt;> oppositeEnd and self.parent.oclIsTypeOf(CompositeMode)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.parent.subModes->exists(sm | sm = oppositeEnd)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.parent.oclIsTypeOf(CompositeMode)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.parent.subModes->exists(sm| sm = oppositeEnd)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="oppositeEnd.conditionalConnectors->exists(c | c = self)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.parent.oclIsTypeOf(CompositeMode)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.subModes->exists(s|s = oppositeEnd)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="oppositeEnd.subModes->exists(s | s = self)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.conditionalConnectors->exists(c| c = oppositeEnd)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self.parent.conditionalConnectors->exists(cc| cc = oppositeEnd)"/>
    </providers>
  </expressionProviders>
  <labelParsers
      extensibleViaService="true">
    <implementations
        xsi:type="gmfgen:PredefinedParser"
        uses="//@diagram/@childNodes.0/@labelModelFacet //@diagram/@childNodes.1/@labelModelFacet //@diagram/@topLevelNodes.0/@labels.0/@modelFacet //@diagram/@topLevelNodes.0/@labels.1/@modelFacet //@diagram/@topLevelNodes.0/@labels.2/@modelFacet //@diagram/@topLevelNodes.0/@labels.3/@modelFacet //@diagram/@childNodes.3/@labelModelFacet //@diagram/@childNodes.4/@labelModelFacet //@diagram/@childNodes.2/@labels.0/@modelFacet //@diagram/@childNodes.2/@labels.1/@modelFacet //@diagram/@childNodes.2/@labels.2/@modelFacet //@diagram/@childNodes.2/@labels.3/@modelFacet //@diagram/@childNodes.5/@labels.0/@modelFacet //@diagram/@childNodes.6/@labelModelFacet //@diagram/@topLevelNodes.1/@labels.0/@modelFacet //@diagram/@topLevelNodes.1/@labels.1/@modelFacet //@diagram/@links.0/@labels.0/@modelFacet //@diagram/@links.1/@labels.0/@modelFacet //@diagram/@links.2/@labels.0/@modelFacet //@diagram/@links.3/@labels.0/@modelFacet //@diagram/@links.4/@labels.0/@modelFacet //@diagram/@links.5/@labels.0/@modelFacet //@diagram/@links.6/@labels.0/@modelFacet //@diagram/@links.7/@labels.0/@modelFacet //@diagram/@links.8/@labels.0/@modelFacet"/>
  </labelParsers>
  <contextMenus
      context="//@diagram">
    <items
        xsi:type="gmfgen:LoadResourceAction"/>
  </contextMenus>
</gmfgen:GenEditorGenerator>
